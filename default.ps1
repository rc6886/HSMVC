Framework "4.5.2"

$projectName = "HSMVC"
$configuration = 'Debug'
$basedir = resolve-path '.\'
$src = "$basedir\hsmvc"

$publish_dir = "$basedir\Publish"

$sln = "$src\HSMVC.sln"

$test_results = "$basedir\TestResults"

$database_instance = "3770k"
$database_name = "Conference"
$scripts_path = "$src\HSMVC.Database\Database\HSMVC"

$rh_path = "$src\packages\roundhouse.0.8.6\bin"
$rh_exe = "$rh_path\rh.exe"
$rh_output_path = "$rh_path\output"
$rh_cmd_timeout = 600
$rh_version_file = "$src\HSMVC\bin\HSMVC.dll"

task default -depends RebuildDatabase

task CommonAssemblyInfo {
    $version = (Get-Date).ToString("yyyy.MM.dd.HHmm")
    create-commonAssemblyInfo "$version" $projectName "$hsmvc\CommonAssemblyInfo.cs"
	$packageVersion = $version
}

task Compile -depends CommonAssemblyInfo {
    exec { msbuild /t:clean /v:q /nologo /p:Configuration=$configuration $sln }
    exec { msbuild /t:build /v:q /nologo /p:Configuration=$configuration $sln }
}

task Test -depends RebuildDatabase {
	exec { & "$src\packages\NUnit.Console.3.0.1\tools\nunit3-console.exe" "$src\HSMVC.Tests\bin\Debug\HSMVC.Tests.dll" }
}

task IntegrationTest -depends Compile {
    $fixieRunners = @(gci $src\packages -rec -filter Fixie.Console.exe)

    if ($fixieRunners.Length -ne 1) {
        throw "Expected to find 1 Fixie.Console.exe, but found $($fixieRunners.Length)."
    }

    $fixieRunner = $fixieRunners[0].FullName

    exec { & $fixieRunner "$src\MetricApiEngine.IntegrationTests\bin\$configuration\MetricApiEngine.IntegrationTests.dll" }
}

function global:create_directory($directory_name) {
  	if(Test-Path $directory_name)
	{
		Remove-Item $directory_name\* -recurse
	}
	else { mkdir $directory_name }
}

task UpdateDatabase -depends Compile {    
    exec { &$rh_Exe -s $database_instance -d $database_name -f $scripts_path -vf $rh_version_file --simple --silent -o $rh_output_path --ct $rh_cmd_timeout }
}

task RebuildDatabase -depends Compile {    
    exec { &$rh_Exe -s $database_instance -d $database_name -vf $rh_version_file --silent -drop -o $rh_output_path --ct $rh_cmd_timeout }
    exec { &$rh_Exe -s $database_instance -d $database_name -f $scripts_path -vf $rh_version_file --simple --silent -o $rh_output_path --ct $rh_cmd_timeout }
}

task UpdateTestDatabase -depends Compile {    
    $db_name = $database_name + "_Test"  
    exec { &$rh_Exe -s $database_instance -d $db_name -f $scripts_path -vf $rh_version_file --simple --silent -o $rh_output_path --ct $rh_cmd_timeout --env TEST }
}

task RebuildTestDatabase -depends Compile {
    $db_name = $database_name + "_Test"
    
    exec { &$rh_Exe -s $database_instance -d $db_name -vf $rh_version_file --silent -drop -o $rh_output_path --ct $rh_cmd_timeout --env TEST }    
    exec { &$rh_Exe -s $database_instance -d $db_name -f $scripts_path -vf $rh_version_file --simple --silent -o $rh_output_path --ct $rh_cmd_timeout --env TEST }
}

function global:create-commonAssemblyInfo($version,$applicationName,$filename) {
  write-host ("Version: " + $version) -ForegroundColor Green
  write-host ("Project Name: " + $projectName) -ForegroundColor Green

"using System;
using System.Reflection;
using System.Runtime.InteropServices;

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behaviour and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: ComVisibleAttribute(false)]
[assembly: AssemblyVersionAttribute(""$version"")]
[assembly: AssemblyFileVersionAttribute(""$version"")]
[assembly: AssemblyCopyrightAttribute(""Copyright 2015"")]
[assembly: AssemblyProductAttribute(""$projectName"")]
[assembly: AssemblyCompanyAttribute("""")]
[assembly: AssemblyConfigurationAttribute(""release"")]
[assembly: AssemblyInformationalVersionAttribute(""$version"")]"  | out-file $filename -encoding "ASCII"    
}